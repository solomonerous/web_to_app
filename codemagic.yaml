name: Flutter Setup

on:
  push:
    branches: [ main ]  # Or any branch you want to trigger the setup

jobs:
  setup-flutter:
    runs-on: ubuntu-latest  # Or macos-latest for iOS builds

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Or 'beta', 'dev' as needed
          cache: true

      - name: Install Android SDK Components
        uses: android-actions/setup-android@v2

      - name: Build Runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Gradlew permissions
        run: chmod +x ./android/gradlew

      - name: Gradle build (release)
        run: ./android/gradlew build

name: Flutter CI/CD with Environment Setup
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  setup-environment:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Flutter and Dart SDKs
        run: |
          curl -fsSl https://raw.githubusercontent.com/shan-shaji/setup-flutter/main/setup_flutter | /bin/bash
          dart --version
          flutter --version

      - name: Install Android SDK and Tools
        run: |
          sudo chmod +x ./flutter_project/android/install-sdk-tools.sh
          sudo ./flutter_project/android/install-sdk-tools.sh --install-dir="$ANDROID_SDK_ROOT" --sdk-tools-version="7504922"
          echo "y" | sdkmanager --licenses
          sdkmanager "build-tools;30.0.3" "platforms;android-30" "platforms;android-28"

      - name: Install iOS Dependencies
        run: |
          sudo gem install cocoapods
          pod --version
          pod repo update
          cd ios
          pod install
          cd ..

      - name: Cache Pub Dependencies
        uses: actions/cache@v2
        with:
          
      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Analyze
        run: flutter analyze

      - name: Run tests
        run: flutter test

  build-and-deploy:
    needs: setup-environment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # Or 'beta', 'dev', or 'master'

      - name: Build iOS IPA
        run: |
          flutter build ios --release --no-codesign
          cd ios
          export CODESIGNING_FOLDER=$(flutter config --enable-ios-codesigning --output-dir)
          export IPA_OUTPUT_PATH=$CODESIGNING_FOLDER/Runner.ipa
          fastlane build_app
          cp $IPA_OUTPUT_PATH ../build/ios/app.ipa
        working-directory: ./flutter_project

      - name: Build Android APK
        run: flutter build apk --release
        working-directory: ./flutter_project

      - name: Deploy to App Store and Google Play
        uses: wzieba/Deploy-Flutter-App@v1
        with:
          ios-distribution-certificate: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE }}
          ios-distribution-provisioning-profile: ${{ secrets.IOS_DISTRIBUTION_PROVISIONING_PROFILE }}
          ios-app-identifier: ${{ secrets.IOS_APP_IDENTIFIER }}
          google-play-json-base64: ${{ secrets.GOOGLE_PLAY_JSON }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
